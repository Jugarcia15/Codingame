#include<bits/stdc++.h>

using namespace std;

struct Nodes
{
	int x, y;
};

vector<int> tree[150000];

int v[150000];
int n, e;

int solve()
{

	int erased = 0,count = 0;
	vector<int> leaf;
	
	while (erased < e)
	{

		for(int i =0; i<=n-1; i++)
		{
			if (tree[i].size() == 1)
			{
				leaf.push_back(i);
				erased++;
			}
		}
		for(int i=0;i<= leaf.size()-1;++i)
		{
			int x;
			if (tree[leaf[i]].size() >= 1)
			{
				for(int j=0; j<=tree[tree[leaf[i]][0]].size();j++)
				{
				
					if (tree[tree[leaf[i]][0]][j] == leaf[i])
					{
						x = j;
						break;
					}
				}
				tree[tree[leaf[i]][0]].erase(tree[tree[leaf[i]][0]].begin() + x);
				tree[leaf[i]].clear();
			}
		}
		leaf.clear();
		count++;
	}
	return count;
}

int main()
{	
	scanf("%d", &e);
	n = e + 1;
	for(int i=0;i<=e-1;++i)
	
	{
		int xi, yi;
		scanf("%d%d", &xi, &yi);
		n = max(xi + 1, n);
		n = max(yi + 1, n);
		tree[xi].push_back(yi);
		tree[yi].push_back(xi);
	}

	printf("%d", solve());
	return 0;
}